---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import StyleguideCard from '../components/StyleguideCard.astro';
import { loadVersionManifest } from '../lib/versioning';

// Load version information
const versionManifest = await loadVersionManifest();

// Helper function to get version info for a styleguide
function getVersionInfo(slug: string) {
  if (!versionManifest) return {};
  const entry = versionManifest.styleguides[slug];
  if (!entry) return {};
  
  return {
    version: entry.version,
    lastUpdated: entry.lastUpdated,
    changeNotes: entry.changeNotes
  };
}
---

<Layout title="Downloads - KI-Styleguides">
  <Header />
  
  <main>
    <!-- Page Header -->
    <section class="bg-gradient-to-br from-primary-50 to-primary-100 py-16">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="text-center">
          <h1 class="text-4xl lg:text-5xl font-bold text-gray-900 mb-6">
            📥 Downloads
          </h1>
          <p class="text-xl text-gray-600 max-w-3xl mx-auto">
            Alle Styleguides und Hilfsmittel zum kostenlosen Herunterladen
          </p>
        </div>
      </div>
    </section>

    <!-- Featured Download -->
    <section class="py-16 bg-white">
      <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="bg-gradient-to-r from-primary-600 to-primary-700 rounded-2xl p-8 lg:p-12 text-white text-center shadow-xl">
          <div class="text-5xl mb-6">🎁</div>
          <h2 class="text-3xl font-bold mb-4">Komplettpaket</h2>
          <p class="text-xl text-primary-100 mb-6 leading-relaxed">
            Alle 7 Styleguides + Beispielprompts + Anleitung in einem praktischen ZIP-Paket
          </p>
          
          <div class="bg-white/10 rounded-lg p-6 mb-8 text-left">
            <h3 class="font-semibold mb-4">📦 Paket enthält:</h3>
            <div class="grid md:grid-cols-2 gap-3 text-sm">
              <div class="flex items-center gap-2">
                <span>✓</span> Gutes Deutsch.md
              </div>
              <div class="flex items-center gap-2">
                <span>✓</span> Gendergerecht (Sternchen).md
              </div>
              <div class="flex items-center gap-2">
                <span>✓</span> Gendergerecht (Neutral).md
              </div>
              <div class="flex items-center gap-2">
                <span>✓</span> Gute Präsentationen.md
              </div>
              <div class="flex items-center gap-2">
                <span>✓</span> Gute Charts.md
              </div>
              <div class="flex items-center gap-2">
                <span>✓</span> Datenvisualisierung.md
              </div>
              <div class="flex items-center gap-2">
                <span>✓</span> Beispielprompts.md
              </div>
              <div class="flex items-center gap-2">
                <span>✓</span> README & Lizenz
              </div>
            </div>
          </div>
          
          <div class="flex flex-col sm:flex-row gap-4 justify-center items-center">
            <button 
              id="download-complete-package"
              class="bg-white text-primary-600 px-8 py-4 rounded-lg text-lg font-semibold hover:bg-gray-50 transition-colors shadow-lg"
            >
              📦 Komplettpaket herunterladen
            </button>
            <div class="text-primary-200 text-sm">
              Dateigröße: ~245 KB • Format: ZIP
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Individual Downloads -->
    <section class="py-16 bg-gray-50">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="text-center mb-12">
          <h2 class="text-3xl font-bold text-gray-900 mb-4">
            Einzelne Styleguides
          </h2>
          <p class="text-lg text-gray-600">
            Laden Sie gezielt die Guides herunter, die Sie benötigen
          </p>
        </div>
        
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          <StyleguideCard
            title="Gutes Deutsch"
            description="Klares, prägnantes Deutsch nach bewährten Prinzipien der Verständlichkeit."
            icon="📝"
            downloadUrl="/files/Gutes Deutsch.md"
            detailUrl="/styleguides/wolf-schneider/"
            tags={["12 KB", "Deutsch"]}
            {...getVersionInfo('gutes-deutsch')}
          />
          
          <StyleguideCard
            title="Gendergerecht (Sternchen)"
            description="Moderne gendergerechte Formulierungen mit Asterisk-Notation."
            icon="⭐"
            downloadUrl="/files/Gendergerecht mit Sternchen.md"
            detailUrl="/styleguides/gendergerecht-sternchen/"
            tags={["8 KB", "Deutsch"]}
            {...getVersionInfo('gendergerecht-mit-sternchen')}
          />
          
          <StyleguideCard
            title="Gendergerecht (Neutral)"
            description="Gendergerechte Sprache durch neutrale Begriffe und Umschreibungen."
            icon="👥"
            downloadUrl="/files/Gendergerecht ohne Sternchen.md"
            detailUrl="/styleguides/gendergerecht-neutral/"
            tags={["9 KB", "Deutsch"]}
            {...getVersionInfo('gendergerecht-ohne-sternchen')}
          />
          
          <StyleguideCard
            title="Gute Präsentationen"
            description="Strukturierte Folien nach SCS-Muster und MECE-Prinzip."
            icon="📊"
            downloadUrl="/files/Gute Praesentation.md"
            detailUrl="/styleguides/praesentationen/"
            tags={["15 KB", "Deutsch"]}
            {...getVersionInfo('gute-praesentation')}
          />
          
          <StyleguideCard
            title="Gute Charts"
            description="Professionelle Datenvisualisierung nach bewährten Chart-Prinzipien."
            icon="📈"
            downloadUrl="/files/Gute Charts.md"
            detailUrl="/styleguides/charts/"
            tags={["18 KB", "Deutsch"]}
            {...getVersionInfo('gute-charts')}
          />
          
          <StyleguideCard
            title="Datenvisualisierung"
            description="Elegante Datenvisualisierung nach bewährten Prinzipien."
            icon="📉"
            downloadUrl="/files/Datenvisualisierung.md"
            detailUrl="/styleguides/tufte/"
            tags={["14 KB", "Deutsch"]}
            {...getVersionInfo('datenvisualisierung')}
          />
        </div>
      </div>
    </section>

    <!-- Additional Resources -->
    <section class="py-16 bg-white">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="text-center mb-12">
          <h2 class="text-3xl font-bold text-gray-900 mb-4">
            Weitere Hilfsmittel
          </h2>
        </div>
        
        <div class="grid md:grid-cols-2 gap-8">
          <div class="bg-gray-50 rounded-lg p-8">
            <div class="text-3xl mb-4">💬</div>
            <h3 class="text-xl font-semibold text-gray-900 mb-4">
              Beispielprompts-Sammlung
            </h3>
            <p class="text-gray-600 mb-6 leading-relaxed">
              Ready-to-use Prompts für Claude, ChatGPT und Microsoft 365 Copilot. 
              Kategorisiert nach Anwendungsfall und KI-Tool.
            </p>
            <div class="flex items-center justify-between">
              <div class="text-sm text-gray-500">
                📄 25 KB • Markdown-Format
              </div>
              <a 
                href="/files/Beispielprompts.md" 
                class="bg-success-600 text-white px-4 py-2 rounded-lg text-sm font-medium hover:bg-success-700 transition-colors"
                download
              >
                📥 Herunterladen
              </a>
            </div>
          </div>
          
          <div class="bg-gray-50 rounded-lg p-8">
            <div class="text-3xl mb-4">📖</div>
            <h3 class="text-xl font-semibold text-gray-900 mb-4">
              GitHub Repository
            </h3>
            <p class="text-gray-600 mb-6 leading-relaxed">
              Vollständige Quelldateien, Issues, Diskussionen und die Möglichkeit 
              zur Mitarbeit am Projekt.
            </p>
            <div class="flex items-center justify-between">
              <div class="text-sm text-gray-500">
                Immer aktuell • Open Source
              </div>
              <a 
                href="https://github.com/chrisschwer/CS-Style-Guides" 
                class="bg-gray-800 text-white px-4 py-2 rounded-lg text-sm font-medium hover:bg-gray-900 transition-colors"
                target="_blank"
                rel="noopener noreferrer"
              >
                🔗 GitHub öffnen
              </a>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- License Info -->
    <section class="py-16 bg-primary-50">
      <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
        <div class="text-4xl mb-6">📜</div>
        <h2 class="text-2xl font-bold text-gray-900 mb-4">
          Creative Commons Attribution 4.0 International
        </h2>
        <p class="text-lg text-gray-600 mb-8 leading-relaxed">
          Alle Inhalte stehen unter der CC BY 4.0 Lizenz und können kostenlos 
          für private und kommerzielle Zwecke verwendet werden.
        </p>
        
        <div class="grid md:grid-cols-3 gap-6 mb-8">
          <div class="bg-white rounded-lg p-6">
            <div class="text-2xl text-green-600 mb-2">✅</div>
            <h3 class="font-semibold mb-2">Kostenlose Nutzung</h3>
            <p class="text-sm text-gray-600">Für kommerzielle und private Zwecke</p>
          </div>
          <div class="bg-white rounded-lg p-6">
            <div class="text-2xl text-green-600 mb-2">✅</div>
            <h3 class="font-semibold mb-2">Bearbeitung erlaubt</h3>
            <p class="text-sm text-gray-600">Anpassung und Weiterverteilung</p>
          </div>
          <div class="bg-white rounded-lg p-6">
            <div class="text-2xl text-primary-600 mb-2">ℹ️</div>
            <h3 class="font-semibold mb-2">Namensnennung</h3>
            <p class="text-sm text-gray-600">Autor erwähnen erforderlich</p>
          </div>
        </div>
        
        <div class="bg-gray-100 rounded-lg p-6 text-left">
          <h4 class="font-semibold mb-2">Attribution-Beispiel:</h4>
          <code class="text-sm text-gray-700">
            Basierend auf "KI-Styleguides" von Christoph Schwerdtfeger, CC BY 4.0
          </code>
        </div>
      </div>
    </section>
  </main>
  
  <Footer />
</Layout>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js"></script>
<script src="/generate-versioned-readme.js" is:inline></script>
<script>
  // Complete package download functionality
  document.addEventListener('DOMContentLoaded', () => {
    const downloadButton = document.getElementById('download-complete-package') as HTMLButtonElement;
    
    if (downloadButton) {
      downloadButton.addEventListener('click', async () => {
        try {
          // Show loading state
          downloadButton.textContent = '📦 Wird vorbereitet...';
          if (downloadButton) downloadButton.disabled = true;
          
          // Create a new ZIP instance
          const zip = new (window as any).JSZip();
          
          // List of files to include
          const files = [
            'Gutes Deutsch.md',
            'Gendergerecht mit Sternchen.md',
            'Gendergerecht ohne Sternchen.md',
            'Gute Praesentation.md',
            'Gute Charts.md',
            'Datenvisualisierung.md',
            'Beispielprompts.md',
            'README.md'
          ];
          
          // Fetch and add each file to the ZIP
          const fetchPromises = files.map(async (filename) => {
            try {
              const response = await fetch(`/files/${filename}`);
              if (response.ok) {
                const content = await response.text();
                zip.file(filename, content);
                return { filename, success: true };
              } else {
                console.warn(`Failed to fetch ${filename}: ${response.status}`);
                return { filename, success: false };
              }
            } catch (error) {
              console.warn(`Error fetching ${filename}:`, error);
              return { filename, success: false };
            }
          });
          
          // Wait for all files to be processed
          const results = await Promise.all(fetchPromises);
          const successfulFiles = results.filter(r => r.success);
          
          // Generate versioned README with current version information
          let readmeContent: string;
          try {
            readmeContent = await (window as any).generateVersionedReadme();
          } catch (error) {
            console.warn('Could not generate versioned README, using fallback:', error);
            readmeContent = `# KI-Styleguides Komplettpaket

Vielen Dank für das Herunterladen!

## Enthaltene Dateien

${successfulFiles.map(f => `- ✅ ${f.filename}`).join('\n')}

## Verwendung

1. Wählen Sie den passenden Styleguide für Ihr Projekt
2. Kopieren Sie den Inhalt in Ihr KI-Tool (Claude Projects, ChatGPT Custom Instructions, etc.)
3. Schreiben Sie bessere Texte mit konsistenter Qualität

## Weitere Informationen

- Website: https://cs-style-guides.vercel.app
- Anleitung: https://cs-style-guides.vercel.app/anwendung/
- GitHub: https://github.com/chrisschwer/CS-Style-Guides

## Lizenz

Alle Inhalte stehen unter der CC BY 4.0 Lizenz.
- ✅ Kostenlose Nutzung für private und kommerzielle Zwecke
- ✅ Bearbeitung und Weiterverteilung erlaubt  
- ℹ️ Namensnennung erforderlich

**Attribution-Beispiel:**
Basierend auf "KI-Styleguides" von Christoph Schwerdtfeger, CC BY 4.0

---
Erstellt am: ${new Date().toLocaleDateString('de-DE')}`;
          }

          zip.file('00-README-ZUERST-LESEN.md', readmeContent);
          
          // Add version manifest to ZIP
          try {
            const versionResponse = await fetch('/versions.json');
            if (versionResponse.ok) {
              const versionManifest: any = await versionResponse.json();
              zip.file('versions.json', JSON.stringify(versionManifest, null, 2));
              
              // Create a human-readable version summary
              const versionSummary = `# Versionsinformationen - KI-Styleguides

Dieses Paket enthält die folgenden Styleguides mit ihren aktuellen Versionen:

## Übersicht

| Styleguide | Version | Letztes Update | Änderungen |
|-----------|---------|----------------|------------|
${Object.values(versionManifest.styleguides)
  .map((entry: any) => `| ${entry.title} | v${entry.version} | ${entry.lastUpdated} | ${entry.changeNotes} |`)
  .join('\n')}

## Versionshistorie

${Object.values(versionManifest.styleguides)
  .map((entry: any) => {
    let historyText = `### ${entry.title}\n\n`;
    if (entry.history && entry.history.length > 0) {
      entry.history
        .sort((a: any, b: any) => new Date(b.date).getTime() - new Date(a.date).getTime())
        .forEach((historyEntry: any) => {
          historyText += `- **v${historyEntry.version}** (${historyEntry.date}): ${historyEntry.notes}\n`;
        });
    } else {
      historyText += `- **v${entry.version}** (${entry.lastUpdated}): ${entry.changeNotes}\n`;
    }
    return historyText;
  })
  .join('\n')}

## Technische Details

- **Paket erstellt am:** ${new Date().toLocaleDateString('de-DE')}
- **Manifest-Schema:** v${versionManifest.schema?.version || '1.0'}
- **Anzahl Styleguides:** ${Object.keys(versionManifest.styleguides).length}
- **Neueste Version:** ${Object.values(versionManifest.styleguides)
    .map((e: any) => e.version)
    .sort((a: string, b: string) => {
      const parseVer = (v: string) => v.split('.').map(Number);
      const [aMaj, aMin, aPat] = parseVer(a);
      const [bMaj, bMin, bPat] = parseVer(b);
      return (bMaj - aMaj) || (bMin - aMin) || (bPat - aPat);
    })[0]}

---
Automatisch generiert von cs-style-guides.vercel.app`;
              
              zip.file('01-VERSIONEN.md', versionSummary);
              
              // Create a changelog file for developers/advanced users
              const changelog = `# CHANGELOG - KI-Styleguides

Alle bemerkenswerten Änderungen an den Styleguides werden in dieser Datei dokumentiert.

Das Format basiert auf [Keep a Changelog](https://keepachangelog.com/de/1.0.0/),
und dieses Projekt folgt der [Semantischen Versionierung](https://semver.org/lang/de/).

${Object.entries(versionManifest.styleguides)
  .sort(([,a]: [string, any], [,b]: [string, any]) => new Date(b.lastUpdated).getTime() - new Date(a.lastUpdated).getTime())
  .map(([, entry]: [string, any]) => {
    let changelogSection = `## [${entry.title}]\n\n`;
    
    if (entry.history && entry.history.length > 0) {
      entry.history
        .sort((a: any, b: any) => new Date(b.date).getTime() - new Date(a.date).getTime())
        .forEach((historyEntry: any) => {
          const [major, minor, patch] = historyEntry.version.split('.').map(Number);
          let changeType = 'Changed';
          if (major > 1 || (major === 1 && minor === 0 && patch === 0)) changeType = 'Added';
          else if (minor > 0) changeType = 'Changed';
          else changeType = 'Fixed';
          
          changelogSection += `### [${historyEntry.version}] - ${historyEntry.date}\n\n`;
          changelogSection += `#### ${changeType}\n`;
          changelogSection += `- ${historyEntry.notes}\n\n`;
        });
    } else {
      changelogSection += `### [${entry.version}] - ${entry.lastUpdated}\n\n`;
      changelogSection += `#### Added\n`;
      changelogSection += `- ${entry.changeNotes}\n\n`;
    }
    
    return changelogSection;
  })
  .join('')}

---

## Legende

- **Added** für neue Features
- **Changed** für Änderungen an bestehenden Features  
- **Deprecated** für Features, die bald entfernt werden
- **Removed** für entfernte Features
- **Fixed** für Bugfixes
- **Security** für Sicherheitsupdates

Generiert am: ${new Date().toLocaleDateString('de-DE')} um ${new Date().toLocaleTimeString('de-DE')}`;
              
              zip.file('CHANGELOG.md', changelog);
            }
          } catch (error) {
            console.warn('Could not add version manifest to ZIP:', error);
          }
          
          // Generate the ZIP file
          const zipBlob = await zip.generateAsync({
            type: 'blob',
            compression: 'DEFLATE',
            compressionOptions: { level: 6 }
          });
          
          // Generate filename with comprehensive version info
          let zipFilename = `ki-styleguides-komplettpaket-${new Date().toISOString().split('T')[0]}.zip`;
          try {
            const versionResponse = await fetch('/versions.json');
            if (versionResponse.ok) {
              const versionManifest: any = await versionResponse.json();
              
              // Find latest update date
              const latestUpdate = Object.values(versionManifest.styleguides)
                .map((e: any) => new Date(e.lastUpdated))
                .reduce((latest, current) => current > latest ? current : latest);
              const latestVersion = latestUpdate.toISOString().split('T')[0];
              
              // Count version types for filename
              const versionCounts = Object.values(versionManifest.styleguides).reduce((counts: {major: number, minor: number, patch: number}, entry: any) => {
                const [major, minor] = entry.version.split('.').map(Number);
                if (major > 1) counts.major++;
                else if (minor > 0) counts.minor++;
                else counts.patch++;
                return counts;
              }, { major: 0, minor: 0, patch: 0 });
              
              // Create descriptive filename
              const versionSummary: string[] = [];
              const counts = versionCounts as {major: number, minor: number, patch: number};
              if (counts.major > 0) versionSummary.push(`${counts.major}major`);
              if (counts.minor > 0) versionSummary.push(`${counts.minor}minor`);
              if (counts.patch > 0) versionSummary.push(`${counts.patch}patch`);
              
              const versionString = versionSummary.length > 0 ? `-${versionSummary.join('-')}` : '';
              
              zipFilename = `ki-styleguides-${latestVersion}-${successfulFiles.length}guides${versionString}.zip`;
            }
          } catch (error) {
            console.warn('Could not determine version for filename:', error);
          }
          
          // Download the ZIP file
          const url = window.URL.createObjectURL(zipBlob);
          const a = document.createElement('a');
          a.href = url;
          a.download = zipFilename;
          document.body.appendChild(a);
          a.click();
          document.body.removeChild(a);
          window.URL.revokeObjectURL(url);
          
          // Show success
          downloadButton.textContent = '✅ Heruntergeladen!';
          setTimeout(() => {
            downloadButton.textContent = '📦 Komplettpaket herunterladen';
            if (downloadButton) downloadButton.disabled = false;
          }, 2000);
          
          // Show success toast with file count
          (window as any).showToast(`ZIP-Paket mit ${successfulFiles.length} Dateien erfolgreich heruntergeladen!`, 'success');
          
        } catch (error) {
          console.error('Download failed:', error);
          downloadButton.textContent = '❌ Fehler beim Download';
          setTimeout(() => {
            downloadButton.textContent = '📦 Komplettpaket herunterladen';
            if (downloadButton) downloadButton.disabled = false;
          }, 2000);
          
          (window as any).showToast('Download fehlgeschlagen. Bitte versuchen Sie es erneut.', 'error');
        }
      });
    }
  });
</script>